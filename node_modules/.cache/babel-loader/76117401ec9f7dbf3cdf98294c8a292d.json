{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deepak\\\\Desktop\\\\react\\\\textapp\\\\src\\\\components\\\\Box.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Box.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Box(PropType) {\n  _s();\n\n  const [text, settext] = useState(`enter your text here`);\n\n  const handleonchange = event => {\n    settext(event.target.value);\n  };\n\n  const upper = () => {\n    let newtext = text.toUpperCase();\n    settext(newtext);\n  };\n\n  const lower = () => {\n    let newtext = text.toLowerCase();\n    settext(newtext);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: PropType.mode === 'dark' ? 'white' : 'grey'\n        },\n        children: [PropType.name, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"text\",\n        style: {\n          color: PropType.mode === 'dark' ? 'white' : 'grey',\n          backgroundColor: PropType.mode === 'dark' ? 'grey' : 'white',\n          border: PropType.mode === 'dark' ? '2px solid white' : '2px solid grey'\n        },\n        value: text,\n        onChange: handleonchange,\n        rows: \"15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: upper,\n      children: \"convert to uppercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: lower,\n      children: \"convert to lowercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: PropType.mode === 'dark' ? 'white' : 'grey',\n        backgroundColor: PropType.mode === 'dark' ? 'grey' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SUMMARY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \"words and \", text.length, \"character\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" READ TIME:\", 0.008 * text.split(\" \").length, \"minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }, this), \"preview:\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Box, \"SrSvcMKpu/akX2KuDB2ohoelLFw=\");\n\n_c = Box;\n\nvar _c;\n\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"sources":["C:/Users/deepak/Desktop/react/textapp/src/components/Box.js"],"names":["React","useState","PropTypes","Box","PropType","text","settext","handleonchange","event","target","value","upper","newtext","toUpperCase","lower","toLowerCase","color","mode","name","backgroundColor","border","split","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACC,OAAO,WAAP;;;AAED,eAAe,SAASC,GAAT,CAAaC,QAAb,EAAuB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAE,sBAAF,CAAhC;;AACA,QAAMM,cAAc,GAAEC,KAAD,IAAS;AAC5BF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAGA,QAAMC,KAAK,GAAC,MAAI;AACd,QAAIC,OAAO,GAACP,IAAI,CAACQ,WAAL,EAAZ;AACAP,IAAAA,OAAO,CAACM,OAAD,CAAP;AACD,GAHD;;AAIA,QAAME,KAAK,GAAC,MAAI;AACd,QAAIF,OAAO,GAACP,IAAI,CAACU,WAAL,EAAZ;AACAT,IAAAA,OAAO,CAACM,OAAD,CAAP;AACD,GAHD;;AAIA,sBACA;AAAA,4BAAE;AAAA,8BACJ;AAAI,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAACZ,QAAQ,CAACa,IAAT,KAAgB,MAAhB,GAAuB,OAAvB,GAA+B;AAAvC,SAAX;AAAA,mBAA6Db,QAAQ,CAACc,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAU,QAAA,SAAS,EAAC,MAApB;AAA2B,QAAA,KAAK,EAAE;AAACF,UAAAA,KAAK,EAACZ,QAAQ,CAACa,IAAT,KAAgB,MAAhB,GAAuB,OAAvB,GAA+B,MAAtC;AAA+CE,UAAAA,eAAe,EAACf,QAAQ,CAACa,IAAT,KAAgB,MAAhB,GAAuB,MAAvB,GAA8B,OAA7F;AAAsGG,UAAAA,MAAM,EAAChB,QAAQ,CAACa,IAAT,KAAgB,MAAhB,GAAuB,iBAAvB,GAAyC;AAAtJ,SAAlC;AAA2M,QAAA,KAAK,EAAEZ,IAAlN;AAAyN,QAAA,QAAQ,EAAEE,cAAnO;AAAmP,QAAA,IAAI,EAAE;AAAzP;AAAA;AAAA;AAAA;AAAA,cAFI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAF,oBAIA;AAAQ,MAAA,OAAO,EAAEI,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAQ,MAAA,OAAO,EAAEG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAMA;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAACZ,QAAQ,CAACa,IAAT,KAAgB,MAAhB,GAAuB,OAAvB,GAA+B,MAAtC;AAA+CE,QAAAA,eAAe,EAACf,QAAQ,CAACa,IAAT,KAAgB,MAAhB,GAAuB,MAAvB,GAA8B;AAA7F,OAAlC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAIZ,IAAI,CAACgB,KAAL,CAAW,GAAX,EAAgBC,MAApB,gBAAsCjB,IAAI,CAACiB,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGC;AAAA,kCAAe,QAAMjB,IAAI,CAACgB,KAAL,CAAW,GAAX,EAAgBC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,2BAIS;AAAA,kBAAIjB;AAAJ;AAAA;AAAA;AAAA;AAAA,cAJT;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADA;AAeC;;GA5BqBF,G;;KAAAA,G","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n import './Box.css'\r\n\r\nexport default function Box(PropType) {\r\n  const [text, settext] = useState(`enter your text here`);\r\n  const handleonchange=(event)=>{\r\n    settext(event.target.value);\r\n  }\r\n  const upper=()=>{\r\n    let newtext=text.toUpperCase();\r\n    settext(newtext)\r\n  }\r\n  const lower=()=>{\r\n    let newtext=text.toLowerCase();\r\n    settext(newtext);\r\n  }\r\n  return( \r\n  <><div>\r\n<h1 style={{ color:PropType.mode==='dark'?'white':'grey' }}>{PropType.name}.</h1>\r\n<textarea className='text' style={{color:PropType.mode==='dark'?'white':'grey' , backgroundColor:PropType.mode==='dark'?'grey':'white', border:PropType.mode==='dark'?'2px solid white':'2px solid grey'}} value={text}  onChange={handleonchange} rows={\"15\"}></textarea>\r\n  </div>;\r\n  <button onClick={upper}>convert to uppercase</button>\r\n  <button onClick={lower}>convert to lowercase</button>\r\n  <div className='container' style={{color:PropType.mode==='dark'?'white':'grey' , backgroundColor:PropType.mode==='dark'?'grey':'white'}}>\r\n    <h1>SUMMARY</h1>\r\n    <p>{text.split(\" \").length}words and {text.length}character</p>\r\n   <p> READ TIME:{0.008*text.split(\" \").length}minutes</p>\r\n   preview:<p>{text}</p>\r\n  </div>\r\n  </>\r\n  );\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}
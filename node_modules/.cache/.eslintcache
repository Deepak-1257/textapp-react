[{"C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\index.js":"1","C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\reportWebVitals.js":"2","C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\App.js":"3","C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\components\\Alert.js":"4","C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\components\\About.js":"5","C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\components\\Box.js":"6","C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\components\\navbar.js":"7"},{"size":511,"mtime":1644492575508,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1643816181686,"results":"10","hashOfConfig":"9"},{"size":1149,"mtime":1644568068873,"results":"11","hashOfConfig":"9"},{"size":273,"mtime":1644492452843,"results":"12","hashOfConfig":"9"},{"size":4005,"mtime":1644481649932,"results":"13","hashOfConfig":"9"},{"size":1290,"mtime":1644484546395,"results":"14","hashOfConfig":"9"},{"size":1578,"mtime":1644503373562,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"10y8wn9",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\index.js",["41"],[],"import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\reportWebVitals.js",[],[],"C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\App.js",["42","43","44","45","46","47","48"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Navbar from'./components/navbar';\nimport Box from './components/Box';\nimport About from './components/About';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\n\nimport { render } from \"react-dom\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Router\n} from \"react-router-dom\";\nfunction App() {\n  const[mode , setmode]=useState('light');\n  const toggle=()=>{\n    if(mode==='light')\n    {setmode('dark');\n  document.body.style.backgroundColor='grey';\nshowalert('dark mode is enabled','success')\n}\n    else\n    {setmode('light');\n  document.body.style.backgroundColor='white';\n showalert('light mode is enabled','success')\n}\n  }\n  const [alert, setalert] = useState('null')\n  const showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert('null');\n    }, 1500);\n  }\n  return (<>\n\n    <Navbar  title=\"TextEditor\" aboutText=\"About\" mode={mode} toggle={toggle} />\n<Alert alert={alert}/>\n  \n   {/* <About/> */}\n   \n   < Box name=\"ENTER YOUR TEXT\" mode={mode}/> \n      \n   \n  </>\n  );\n}\n\nexport default App;\n","C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\components\\Alert.js",[],[],"C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\components\\About.js",[],[],"C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\components\\Box.js",["49"],[],"import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n import './Box.css'\r\n\r\nexport default function Box(PropType) {\r\n  const [text, settext] = useState(`enter your text here`);\r\n  const handleonchange=(event)=>{\r\n    settext(event.target.value);\r\n  }\r\n  const upper=()=>{\r\n    let newtext=text.toUpperCase();\r\n    settext(newtext)\r\n  }\r\n  const lower=()=>{\r\n    let newtext=text.toLowerCase();\r\n    settext(newtext);\r\n  }\r\n  return( \r\n  <><div>\r\n<h1 style={{ color:PropType.mode==='dark'?'white':'grey' }}>{PropType.name}.</h1>\r\n<textarea className='text' style={{color:PropType.mode==='dark'?'white':'grey' , backgroundColor:PropType.mode==='dark'?'grey':'white', border:PropType.mode==='dark'?'2px solid white':'2px solid grey'}} value={text}  onChange={handleonchange} rows={\"15\"}></textarea>\r\n  </div>;\r\n  <button onClick={upper}>convert to uppercase</button>\r\n  <button onClick={lower}>convert to lowercase</button>\r\n  <div className='container' style={{color:PropType.mode==='dark'?'white':'grey' , backgroundColor:PropType.mode==='dark'?'grey':'white'}}>\r\n    <h1>SUMMARY</h1>\r\n    <p>{text.split(\" \").length}words and {text.length}character</p>\r\n   <p> READ TIME:{0.008*text.split(\" \").length}minutes</p>\r\n   preview:<p>{text}</p>\r\n  </div>\r\n  </>\r\n  );\r\n  }\r\n","C:\\Users\\deepak\\Desktop\\react\\textapp\\src\\components\\navbar.js",["50","51","52","53"],[],"import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nlet Naam=\"deepak\";\r\nexport default function  navbar(props) {\r\n  return  (<>\r\n  <nav className={` navbar navbar-expand-lg navbar- ${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className={`navbar-brand text-${props.mode==='dark'?'white':'grey'}  href=\"#\"`}>{props.title}{Naam}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className={`nav-link active  text-${props.mode==='dark'?'white':'grey'} aria-current=\"page\" href=\"#\"`}>{props.aboutText}</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className={` nav-link text-${props.mode==='dark'?'white':'grey'} href=\"#\"`}>contact us</a>\r\n          </li>\r\n           </ul>\r\n           \r\n      </div>\r\n    </div>\r\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggle} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`enable ${props.mode} mode`}</label>\r\n</div>\r\n  </nav>\r\n  </>\r\n    );\r\n}\r\n",{"ruleId":"54","severity":1,"message":"55","line":1,"column":16,"nodeType":"56","messageId":"57","endLine":1,"endColumn":24},{"ruleId":"54","severity":1,"message":"58","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":12},{"ruleId":"54","severity":1,"message":"59","line":5,"column":8,"nodeType":"56","messageId":"57","endLine":5,"endColumn":13},{"ruleId":"54","severity":1,"message":"60","line":9,"column":10,"nodeType":"56","messageId":"57","endLine":9,"endColumn":16},{"ruleId":"54","severity":1,"message":"61","line":11,"column":3,"nodeType":"56","messageId":"57","endLine":11,"endColumn":16},{"ruleId":"54","severity":1,"message":"62","line":12,"column":3,"nodeType":"56","messageId":"57","endLine":12,"endColumn":9},{"ruleId":"54","severity":1,"message":"63","line":13,"column":3,"nodeType":"56","messageId":"57","endLine":13,"endColumn":8},{"ruleId":"54","severity":1,"message":"64","line":14,"column":3,"nodeType":"56","messageId":"57","endLine":14,"endColumn":9},{"ruleId":"54","severity":1,"message":"65","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":17},{"ruleId":"54","severity":1,"message":"65","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":8,"column":7,"nodeType":"68","endLine":8,"endColumn":90},{"ruleId":"66","severity":1,"message":"67","line":15,"column":13,"nodeType":"68","endLine":15,"endColumn":119},{"ruleId":"66","severity":1,"message":"67","line":18,"column":13,"nodeType":"68","endLine":18,"endColumn":92},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'About' is defined but never used.","'render' is defined but never used.","'BrowserRouter' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'PropTypes' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]